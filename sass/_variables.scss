// scss-lint:disable ColorKeyword, ColorVariable, SpaceAfterComma

//
// Variables
//

// The following Sass functions are required to generate some variables' values,
// so we load them first.
@import 'chroma/functions';


//
// Browser support
//
// Based on caniuse.com's browser usage stats, Compass will support any browser
// that is used by at least 1 user in 10,000. These variables are used to
// specify which browsers are supported by Compass. "Unsupported" browsers will
// still see the generated CSS, of course, but will not get special treatment
// for its bugs or CSS3 vendor prefixes.
//

// The browser usage threshold for features that cannot degrade gracefully.
// A value of 100 means 100% of users would have to use the browser before it is
// supported. A value of .01 (the default) means 1 user in 10,000.
$critical-usage-threshold: .01 !default;

// Set this to true to generate comments that will explain why a prefix was
// included or omitted.
$debug-browser-support: false;

// Optional map of minimum browser versions to support. If a specific browser
// has usage stats below the $critical-usage-threshold, you can still require
// support for it using this variable. For example, to require support for IE 6
// and later, set $browser-minimum-versions['ie'] to '6'.
$browser-minimum-versions: (
  'chrome':  null,
  'firefox': null,
  'ie':      null,
  'safari':  null,
  'opera':   null
) !default;

//
// Border-box support for IE 6/7
//
// IE6-7 don't support box-sizing: border-box. We can fix this in 1 of 3 ways:
// - Drop support for IE 6/7. :-) Set $critical-usage-threshold to a value high
//   enough to drop IE7 users.
// - Install the box-sizing polyfill and set the variable below to
//   the absolute path URL to the boxsizing.htc file.
//   @see https://github.com/Schepp/box-sizing-polyfill
//   $box-sizing-polyfill-path: '/path/to/boxsizing.htc';
// - Use the same CSS unit for grid and gutter width in resonsive-sidebars.scss
//   (use px for both or use % for both) and set:
//   $box-sizing: content-box;
//


//
// Font faces, stacks and sizes.
//

// Compass' vertical_rhythm extension is a powerful tool to set up a vertical
// rhythm for your entire page. You can see some of its mixins and functions in
// use in the normalize.scss file.
// @see http://compass-style.org/reference/compass/typography/vertical_rhythm/

// The font size set on the root html element.
$base-font-size:        16px;

// The base line height determines the basic unit of vertical rhythm.
$base-line-height:      24px;

// The length unit in which to output vertical rhythm values.
// Supported values: px, em, rem.
$rhythm-unit:           'rem';
$rem-with-px-fallback:  true;


// The following font family declarations use widely available fonts.
// A user's web browser will look at the comma-separated list and will
// attempt to use each font in turn until it finds one that is available
// on the user's computer. The final "generic" font (sans-serif, serif or
// monospace) hints at what type of font to use if the web browser doesn't
// find any of the fonts in the list.

// Serif font stacks.
$times-new-roman: 'Times New Roman', Times, Georgia, 'DejaVu Serif', serif;
$times:           Times, 'Times New Roman', Georgia, 'DejaVu Serif', serif;
$georgia:         Georgia, 'Times New Roman', 'DejaVu Serif', serif;

// Sans-serif font stacks.
$verdana:         Verdana, Tahoma, 'DejaVu Sans', sans-serif;
$tahoma:          Tahoma, Verdana, 'DejaVu Sans', sans-serif;
$helvetica:       Helvetica, Arial, 'Nimbus Sans L', sans-serif;
$arial:           Arial, Helvetica, 'Nimbus Sans L', sans-serif;
$impact:          Impact, 'Arial Narrow', Helvetica, sans-serif;

// Monospace font stacks.
// For an explanation of why "sans-serif" is at the end of this list, see
// http://meyerweb.com/eric/thoughts/2010/02/12/fixed-monospace-sizing/
$menlo:           Menlo, 'DejaVu Sans Mono', 'Ubuntu Mono', Courier, 'Courier New', monospace, sans-serif;

// Now create some variables using the font stacks we want on this site.
$font-body:       $verdana;
$font-monospace:  $menlo;
$font-watermark:  $impact;


// Colors
//
// Use the `color()` function to add colors to CSS properties.
//
// Markup: chroma-kss-markup.hbs
//
// Weight: -1
//
// Style guide: sass.colors

// Define descriptive names of color values.
$chroma: define-default-color-scheme('Descriptive color names for use in "functional" color names below.');
$chroma: add-colors((
  white:                  #fff,
  grey-extra-light:       #eee,
  grey-light:             #ddd,
  grey-medium-light:      #ccc,
  grey-medium:            #999,
  grey-dark:              #666,
  grey-extra-dark:        #333,
  black:                  #000,

  blue:                   #0072b9,

  purple:                 #639,

  pink-pale:              #fef5f1,
  red:                    #c00,
  red-orange:             #ed541d,
  rust:                   #8c2e0b,

  yellow-pale:            #ffd,
  yellow:                 #ff0,
  yellow-dark:            #ed5,

  green-pale:             #f8fff0,
  green-light:            #be7,
  green-dark:             #234600,
));

// Define color names for functional uses.
$chroma: define-color-scheme('functional', 'Colors used by functional parts of the design.');
$chroma: add-colors('functional', (
  // Colors used in the main content area.
  text:                   'black',
  text-bg:                'white',

  link:                   'blue',
  link-visited:           'purple',
  link-active:            'red',

  border:                 'grey-medium-light',

  autocomplete:           'text',
  autocomplete-bg:        'text-bg',
  autocomplete-select:    'white',
  autocomplete-select-bg: 'blue',

  body-bg:                'text-bg',

  fieldset-summary:       'grey-medium',
  form-error:             'red',

  mark-highlight:         'red',
  mark-bg:                'yellow',

  menu-active:            'text',

  preview-bg:             'yellow-pale',

  progress-bar:           'blue',
  progress-bar-bg:        'grey-medium-light',
  progress-bar-border:    'grey-dark',

  resizable-grippie:      'grey-extra-light',

  row-stripe:             'grey-extra-light',
  row-disabled:           'grey-medium-light',

  skip-link:              'white',
  skip-link-bg:           'grey-dark',

  status:                 'green-dark',
  status-bg:              'green-pale',
  status-border:          'green-light',
  status-highlight:       'text',
  warning:                'rust',
  warning-bg:             'yellow-pale',
  warning-border:         'yellow-dark',
  error:                  'rust',
  error-bg:               'pink-pale',
  error-border:           'red-orange',

  tabs-border:            'border',
  tabs-bg:                'text-bg',
  tab:                    'grey-extra-dark',
  tab-text-shadow:        'white',
  tab-bg:                 'grey-light',
  tab-secondary:          'grey-dark',

  table-drag:             'yellow-pale',
  table-select:           'yellow-pale',

  watermark:              'grey-extra-light',
));

$chroma-active-scheme: 'functional';


// Breakpoints
//
// Use the `respond-to()` mixin to use named breakpoints. Documentation is
// available in the [Breakpoint wiki
// pages](https://github.com/at-import/breakpoint/wiki/Respond-To).
//
// Style guide: sass.variables.breakpoints

$breakpoints: (
  'small':        (444px,       'no-query' true),
  'medium':       (777px,       'no-query' true),
  'medium-only':  (777px 998px, 'no-query' true),
  'large':        (999px,       'no-query' true),
  'larger':       (1222px),
);


//
// Misc
//

// The amount lists, blockquotes and comments are indented.
$indent-amount: 2 * $base-font-size;

// The height of the navigation container.
$nav-height: 2 * $base-line-height;

// Drupal RTL support: Rather than include a separate *-rtl.css file, Zen 6 uses
// Drupal 8's standard [dir='rtl'] selector for RTL language support. You can
// turn off all RTL CSS by setting the following variable to false.
$include-rtl: true;
